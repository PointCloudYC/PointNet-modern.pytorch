datasets: 'modelnet40'
data_root: ''
num_classes: 40
input_features_dim: 3
batch_size: 8
num_points: 10000
num_workers: 4
# data augmentation
x_angle_range: 0.0
y_angle_range: 0.0
z_angle_range: 0.0
scale_low: 0.6
scale_high: 1.4
noise_std: 0.002
noise_clip: 0.05
translate_range: 0.0

# ---------------------------------------------------------------------------- #
# Model
# ---------------------------------------------------------------------------- #
backbone: 'pointnet2_sa_msg'
head: 'pointnet2_cls'
radius: 0.05
sampleDl: 0.02
use_xyz: True
input_channels: 320 #64 + 128 + 128 
nsamples:
  - [16, 32, 128]
  - [32, 64, 128]
npoints:
  - 512
  - 128
radii:
  - [0.1, 0.2, 0.4]
  - [0.2, 0.4, 0.8]
mlps: # each stage's mlp(point-wise leanring)
  - [[3, 32, 32, 64], [3, 64, 64, 128], [3, 64, 96, 128]]
  - [[320, 64, 64, 128],[320, 128, 128, 256], [320, 128, 128, 256]]
  - [640, 256, 512, 1024],
# width: 144
# depth: 2
# bottleneck_ratio: 2
in_radius: 2.0
num_steps: 2000
# dropout_rate: 0.6

# ---------------------------------------------------------------------------- #
# Training options
# ---------------------------------------------------------------------------- #
epochs: 600
start_epoch: 1
base_learning_rate: 0.002
lr_scheduler: 'step'  # step,cosine
optimizer: 'sgd'
warmup_epoch: -1
lr_decay_steps: 1
lr_decay_rate: 0.9885531
weight_decay: 0.001
momentum: 0.98

# ---------------------------------------------------------------------------- #
# io and misc
# ---------------------------------------------------------------------------- #
load_path: ''
print_freq: 10
save_freq: 10
val_freq: 10
log_dir: './output'
local_rank: 0
amp_opt_level: ''
rng_seed: 0

# ---------------------------------------------------------------------------- #
# Local Aggregation options
# ---------------------------------------------------------------------------- #
# local_aggregation_type: 'pointwisemlp'
# pointwisemlp:
#   feature_type: 'dp_fi_df'
#   num_mlps: 1
#   reduction: 'max'
